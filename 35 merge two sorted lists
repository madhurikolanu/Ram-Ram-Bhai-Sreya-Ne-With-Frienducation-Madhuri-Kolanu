/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        // create dummy listnode
        ListNode finalList = new ListNode(0);
        ListNode tempList = finalList;
        // traverse through both the lists and consider the less value and append it to tempList
        while(list1 != null && list2 != null){
            if(list1.val < list2.val){
                tempList.next = list1;
                list1 = list1.next;
            }
            else{
                tempList.next = list2;
                list2 = list2.next;
            }
            tempList = tempList.next;
        }
        // leftover list append to tempList
        tempList.next = (list1 == null) ? list2 : list1;
        return finalList.next;
    }
}